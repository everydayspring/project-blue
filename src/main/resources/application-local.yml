server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset : UTF-8
      enabled: true
      force: true

spring:
  application:
    name: spring-blue-local
  datasource:
    master:
      hikari:
        jdbc-url: ${master_jdbc_url}
        username: ${master_username}
        password: ${master_password}
        driver-class-name: com.mysql.cj.jdbc.Driver
    slave:
      hikari:
        jdbc-url: ${slave_jdbc_url}
        username: ${slave_username}
        password: ${slave_password}
        driver-class-name: com.mysql.cj.jdbc.Driver
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.MySQL8Dialect
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${kakao_client_id}
            redirect-uri: ${kakao_redirect_uri}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope:
              - account_email
              - profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id # 유저정보 조회 시 반환되는 최상위 필드명으로 해야 한다.


springdoc.swagger-ui.path: /api-test

jwt:
  secret:
    key: ${secret_key}

slack:
  webhook:
    url: ${SLACK_WEBHOOK_URL}


cloud:
  aws:
    s3:
      bucket: project-blue-s3
    stack.auto: false
    region.static: ap-northeast-2
    credentials:
      accessKey: ${aws_access_key}
      secretKey: ${aws_secret_key}

